# The docker-compose.yml file describes the services that make your app. In this example those services are a web server and database. 
# The compose file also describes which Docker images these services use, how they link together, any volumes they might need to be mounted inside the containers. 
# Finally, the docker-compose.yml file describes which ports these services expose. See the docker-compose.yml reference for more information on how this file works.

version: "3.9"
   
services:
  # db:                          #baza za pokretanje preko vagrant-a, pokrecetanje iz Cloud folder-a
  #   image: postgres
  #   container_name: db
  #   environment:
  #     - POSTGRES_DB=cloud_db
  #     - POSTGRES_USER=cloud_admin
  #     - POSTGRES_PASSWORD=password

  db1:                          #baza za pokretanje preko docker-compose, pokretanje iz Cloud/restApi/restApi folder-a
    image: postgres
    container_name: db1
    environment:
      - POSTGRES_DB=cloud_db
      - POSTGRES_USER=cloud_admin
      - POSTGRES_PASSWORD=password
  db2:
    image: postgres
    container_name: db2
    environment:
      - POSTGRES_DB=cloud_db
      - POSTGRES_USER=cloud_admin
      - POSTGRES_PASSWORD=password


  # web:                          #konfiguracija za pokretanje preko vagrant-a, pokrecetanje iz Cloud folder-a, sa localhost gadjam post 8000
  #   build: .
  #   container_name: web
  #   volumes:
  #   - .:/code
  #   ports:
  #     - "8000:8000"    
  #   env_file:
  #   - restApi/db1.env
  #   depends_on:
  #     - db

  web1:                         #konfiguracija za pokretanje preko docker-compose, pokretanje iz Cloud/restApi/restApi folder-a, sa localhost gadjam post 80
    build: .
    container_name: web1
    volumes:
      - .:/code
    ports:
      - "8001:8000"    
    env_file:
    - restApi/db1.env  
    depends_on:
      - db1
  web2:
    build: .
    container_name: web2
    volumes:
      - .:/code
    ports:
      - "8002:8000"    
    env_file:
    - restApi/db2.env   
    depends_on:
      - db2

  nginx2:
    container_name: nginx2
    build: ./nginx/load_balancer
    ports:
      - "80:80"
    links:
      - web1
      - web2